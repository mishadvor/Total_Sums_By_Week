import pandas as pd
import streamlit as st
from io import BytesIO
import matplotlib.pyplot as plt
from openpyxl.drawing.image import Image as OpenpyxlImage
from openpyxl.utils.dataframe import dataframe_to_rows

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –û–ë–©–ò–• —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ—Ç—á—ë—Ç–æ–≤ Wildberries (–†–∞–∑–±–∏–≤–∫–∞ –ø–æ –î–∞—Ç–∞–º. –° –≥—Ä–∞—Ñ–∏–∫–æ–º.)")

# –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
mode = st.radio(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏", ["–û–¥–∏–Ω —Ñ–∞–π–ª", "–¢—Ä–∏ —Ñ–∞–π–ª–∞ (—Ç—Ä–∏ —Ç–æ—á–∫–∏ –ø—Ä–æ–¥–∞–∂)"]
)

# –ü–æ–ª–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
start_date = st.date_input(
    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö",
    value=pd.to_datetime("today").date(),  # –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî —Å–µ–≥–æ–¥–Ω—è
)

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º start_date –≤ Timestamp
start_date = pd.to_datetime(start_date)

##########------ –ó–ê–ì–†–£–ó–ö–ê –§–ê–ô–õ–û–í ------------
dfs = []

if mode == "–û–¥–∏–Ω —Ñ–∞–π–ª":
    uploaded_file = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª –æ—Ç—á—ë—Ç–∞ Wildberries", type=["xlsx", "xls"]
    )
    if uploaded_file:
        dfs.append(pd.read_excel(uploaded_file))

elif mode == "–¢—Ä–∏ —Ñ–∞–π–ª–∞ (—Ç—Ä–∏ —Ç–æ—á–∫–∏ –ø—Ä–æ–¥–∞–∂)":
    st.markdown("### –ó–∞–≥—Ä—É–∑–∏—Ç–µ 3 —Ñ–∞–π–ª–∞ –ø–æ –æ—á–µ—Ä–µ–¥–∏:")
    file1 = st.file_uploader("–§–∞–π–ª –¥–ª—è —Ç–æ—á–∫–∏ 1", type=["xlsx", "xls"], key="f1")
    file2 = st.file_uploader("–§–∞–π–ª –¥–ª—è —Ç–æ—á–∫–∏ 2", type=["xlsx", "xls"], key="f2")
    file3 = st.file_uploader("–§–∞–π–ª –¥–ª—è —Ç–æ—á–∫–∏ 3", type=["xlsx", "xls"], key="f3")

    if file1 and file2 and file3:
        dfs = [pd.read_excel(file1), pd.read_excel(file2), pd.read_excel(file3)]
        for i, df in enumerate(dfs):
            df["–ò—Å—Ç–æ—á–Ω–∏–∫"] = f"–¢–æ—á–∫–∞ {i+1}"
    else:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ —Ç—Ä–∏ —Ñ–∞–π–ª–∞.")

if len(dfs) > 0:
    try:
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º—ã –≤ –æ–¥–∏–Ω
        combined_df = pd.concat(dfs, ignore_index=True)

        ##########------ –ß–ò–°–¢–ö–ê –ò –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–ï –î–ê–¢–´ ------------
        # –£–¥–∞–ª—è–µ–º –≤—Å—ë, —á—Ç–æ –ø–æ—Å–ª–µ "T"
        combined_df["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"] = (
            combined_df["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"].astype(str).str.split("T").str[0]
        )

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ datetime
        combined_df["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"] = pd.to_datetime(
            combined_df["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"], errors="coerce"
        )

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ YYYY-MM-DD
        combined_df["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"] = combined_df["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"].dt.strftime("%Y-%m-%d")

        # –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞—Ç–æ–π
        combined_df["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"] = pd.to_datetime(combined_df["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"])
        filtered_df = combined_df[
            combined_df["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"] >= pd.to_datetime(start_date)
        ]

        ##########------ –ù–ê–ß–ê–õ–û –û–ë–†–ê–ë–û–¢–ö–ò –î–ê–ù–ù–´–• ------------
        sums_per_date = (
            filtered_df.groupby("–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞")
            .agg(
                {
                    "–ü—Ä–æ–¥–∞–∂–∞": "sum",
                    "–ö –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—é –∑–∞ —Ç–æ–≤–∞—Ä": "sum",
                    "–°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏": "sum",
                    "–û–±—â–∞—è —Å—É–º–º–∞ —à—Ç—Ä–∞—Ñ–æ–≤": "sum",
                    "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è": "sum",
                    "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏": "sum",
                    "–ü—Ä–æ—á–∏–µ —É–¥–µ—Ä–∂–∞–Ω–∏—è": "sum",
                    "–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ": "sum",
                }
            )
            .astype(int)
            .reset_index()
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞—Ç—É –≤ —Å—Ç—Ä–æ–∫–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞
        sums_per_date["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"] = sums_per_date["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"].dt.strftime(
            "%d-%m-%Y"
        )

        ##########------ –ü–û–°–¢–†–û–ï–ù–ò–ï –ì–†–ê–§–ò–ö–ê ------------
        buf = BytesIO()
        plt.figure(figsize=(10, 5))

        columns_to_plot = [
            "–ü—Ä–æ–¥–∞–∂–∞",
            "–ö –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—é –∑–∞ —Ç–æ–≤–∞—Ä",
            "–°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏",
            "–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ",
        ]

        for column in columns_to_plot:
            plt.plot(
                sums_per_date["–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞"],
                sums_per_date[column],
                label=column,
                marker="o",
            )

        plt.title(f'–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ (—Å {start_date.strftime("%d-%m-%Y")})')
        plt.xlabel("–î–∞—Ç–∞")
        plt.ylabel("–°—É–º–º–∞")
        plt.xticks(rotation=90)
        plt.legend()
        plt.grid(True)
        plt.tight_layout()
        plt.savefig(buf, format="png")
        plt.close()

        ##########------ –°–û–ó–î–ê–ù–ò–ï EXCEL-–§–ê–ô–õ–ê ------------
        output = BytesIO()
        with pd.ExcelWriter(output, engine="openpyxl") as writer:
            workbook = writer.book
            worksheet = workbook.create_sheet(title="Report")

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º DataFrame –≤ –ª–∏—Å—Ç
            for row in dataframe_to_rows(sums_per_date, index=False, header=True):
                worksheet.append(row)

            # –í—Å—Ç–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫
            img = OpenpyxlImage(buf)
            worksheet.add_image(img, "K10")  # –ì—Ä–∞—Ñ–∏–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å K10

        output.seek(0)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        st.success("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        st.download_button(
            label="‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å –æ—Ç—á—ë—Ç",
            data=output,
            file_name=f"wildberries_report_{start_date.strftime('%Y%m%d')}.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        )

    except Exception as e:
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        st.stop()
else:
    st.info("–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤...")
